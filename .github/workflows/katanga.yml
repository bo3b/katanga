name: Katanga build

on:
  # Only Manual dispatch
  workflow_dispatch:

permissions:
  contents: read
  actions: read

jobs:
  build:
    #  includes VS2022 Enterprise
    runs-on: windows-2022

#    permissions:
#      contents: write
#      actions: read
      
    steps:
      - name: Checkout master
        uses: actions/checkout@v4

      - name: Show all Visual Studio installs and toolsets
        shell: cmd
        run: |
          "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -all
          echo(
          echo === Installed VS ===
          dir "C:\Program Files (x86)\Microsoft Visual Studio"
          dir "C:\Program Files\Microsoft Visual Studio"
          echo(
          echo === Installed toolsets ===
          dir "C:\Program Files (x86)\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC"
          dir "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC"

#      - name: Install Unity 2018.4.36f1
#        uses: game-ci/unity-install@v3
#        with:
#          version: 2018.4.36f1
#          modules: windows-il2cpp

# apparently upsupported on windows?
#      - name: Activate Unity license
#        uses: game-ci/unity-activate@v2
#        with:
#          unityVersion: 2018.4.36f1
#        env:
#          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
#          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

      - name: Build Unity app for Windows
        uses: game-ci/unity-builder@v4.5.0
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneWindows64
          unityVersion: 2018.4.36f1
          buildName: katanga
          buildsPath: katanga_build
          
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v2

      # Build both Win32/x64 targets as binary injected into games must match game bitness.
      - name: Build x32/x64
        working-directory: ${{env.GITHUB_WORKSPACE}}
        # Add additional options to the MSBuild command line here (like platform or verbosity level).
        # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
        run: |
          msbuild /m /p:Configuration=VR katanga.sln /p:platform=x64 /v:minimal /target:rebuild /p:PlatformToolset=v142
          msbuild /m /p:Configuration=VR katanga.sln /p:platform=Win32 /v:minimal /target:rebuild /p:PlatformToolset=v142

      - name: Upload plugin Artifacts
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
#         name: *.dll
#           GamePlugin64.dll
#           UnityNativePlugin64.dll
          # A file, directory or wildcard pattern that describes what to upload
          path: .\UnityScreenApp\Assets\Plugins\*.dll

      - name: Get tag name
        shell: bash
        run: |
          TAG_NUM="${GITHUB_REF##*/}"
          echo "TAG_NUM=$TAG_NUM" >> $GITHUB_ENV
          echo "Using Tag: $TAG_NUM"
  
      - name: Compress release to .7z
        shell: bash
        run: |
          cd "katanga_build"
          7z a -t7z "katanga_v${TAG_NUM}.7z" "./*"
      
      - name: List contents of .7z file for log info
        shell: bash
        run: |
          7z l "katanga_build/katanga_v${TAG_NUM}.7z"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NUM }}
          name: Release build for v${{ env.TAG_NUM }} (x32, x64)
          files: "katanga_build/katanga_v${{ env.TAG_NUM }}.7z"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
